// set up a simple neutral nonWF simulation
initialize() {
	initializeSLiMModelType("nonWF");
	defineConstant("K", 500);	// carrying capacity
	
	// neutral mutations, which are allowed to fix
	initializeMutationType("m1", 0.5, "f", 0.0);
	
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, 99999);
	initializeMutationRate(1e-7);
	initializeRecombinationRate(1e-8);
}

// each individual reproduces itself once

reproduction() {
      subpop.addRecombinant(genome1, NULL, NULL, NULL, NULL, NULL);
      subpop.addRecombinant(genome1, NULL, NULL, NULL, NULL, NULL);
   }

// create an initial population of 10 individuals
1 early() {
	sim.addSubpop("p1", 10);
}

// provide density-dependent selection
 early() {
      inds = sim.subpopulations.individuals;
      inds[inds.age > 0].fitnessScaling = 0.0;
      
      p1.fitnessScaling = K / sum(inds.age == 0);
   }

 late() {
      muts = sim.mutationsOfType(m1);
      freqs = sim.mutationFrequencies(NULL, muts);
      if (any(freqs == 0.5))
         sim.subpopulations.genomes.removeMutations(muts[freqs == 0.5], T);
   }

// output all fixed mutations at end
20000 late() { sim.outputFixedMutations(); }
